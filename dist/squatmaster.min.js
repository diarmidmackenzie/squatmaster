!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var i=e();for(var s in i)("object"==typeof exports?exports:t)[s]=i[s]}}(self,(()=>(()=>{var t={693:()=>{AFRAME.registerComponent("bar-monitor",{dependencies:["bar-position"],schema:{hookPosition:{type:"vec3",default:{x:0,y:1.5,z:-.5}},topHeight:{default:1.6},targetDepth:{default:1},safetyPinHeight:{default:.75},rackWidth:{default:1},rackDepth:{default:1}},init(){this.state={insideRack:!1,lifterAtHooks:!1,barOnShoulders:!1,atTop:!1,belowDepth:!1,belowSafetyPins:!1}},isInsideRack(t){let e,i;Math.abs(t.x-this.data.hookPosition.x)<this.data.rackWidth/2&&(e=!0);const s=t.z-this.data.hookPosition.z;return s<this.data.rackDepth&&s>-.1&&(i=!0),e&&i},checkIfInsideRack(t){return this.isInsideRack(t)?(this.state.insideRack||this.el.emit("entered-rack"),this.state.insideRack=!0):(this.state.insideRack&&this.el.emit("exited-rack"),this.state.insideRack=!1),this.state.insideRack},isAtHooks(t){let e,i;return Math.abs(t.x-this.data.hookPosition.x)<this.data.rackWidth/2&&(e=!0),Math.abs(this.data.hookPosition.z-t.z)<.05&&(i=!0),e&&i},checkIfAtHooks(t){return this.isAtHooks(t)?(this.state.lifterAtHooks||this.el.emit("reached-hooks"),this.state.lifterAtHooks=!0):(this.state.lifterAtHooks&&(t.y>this.data.hookPosition.y?(this.state.barOnShoulders||this.el.emit("shouldered-bar"),this.state.barOnShoulders=!0):(this.state.barOnShoulders&&this.el.emit("returned-bar"),this.state.barOnShoulders=!1),this.el.emit("left-hooks")),this.state.lifterAtHooks=!1),this.state.lifterAtHooks},isAtTop(t){return this.data.topHeight-t.y<.05},checkIfAtTop(t){return this.isAtTop(t)?(this.state.atTop||this.el.emit("hit-top"),this.state.atTop=!0):(this.state.atTop&&this.el.emit("lowered-from-top"),this.state.atTop=!1),this.state.atTop},isBelowDepth(t){return t.y<this.data.targetDepth},checkIfBelowDepth(t){return this.isBelowDepth(t)?(this.state.belowDepth||this.el.emit("hit-target-depth"),this.state.belowDepth=!0):(this.state.belowDepth&&this.el.emit("upwards-from-target-depth"),this.state.belowDepth=!1),this.state.belowDepth},isBelowSafetyPins(t){return t.y<this.data.safetyPinHeight-.05},checkIfBelowSafetyPins(t){return this.isBelowSafetyPins(t)?(this.state.belowSafetyPins||this.el.emit("below-safety-pins"),this.state.belowSafetyPins=!0):(this.state.belowSafetyPins&&(this.el.emit("bailed-out"),this.state.barOnShoulders=!1),this.state.belowSafetyPins=!1),this.state.belowSafetyPins},tick(){barPosition=this.el.sceneEl.components["bar-position"].barPosition,this.checkIfInsideRack(barPosition)&&(this.checkIfAtHooks(barPosition),this.checkIfAtTop(barPosition),this.checkIfBelowDepth(barPosition),this.checkIfBelowSafetyPins(barPosition))}})},610:()=>{AFRAME.registerComponent("bar-position",{init(){this.cameraPosition=new THREE.Vector3,this.cameraQuaternion=new THREE.Quaternion,this.tempQuaternion=new THREE.Quaternion,this.rackEl=document.querySelector("#rack"),rack=this.rackEl.object3D,this.rackInverseTransform=new THREE.Matrix4,rack.updateWorldMatrix(),this.rackInverseTransform.copy(rack.matrixWorld),this.rackInverseTransform.invert(),this.barPosition=new THREE.Vector3,this.barOffset=new THREE.Vector3,this.barOffset.set(0,-.1,-.2),this.getCameraAndBarPosition()},getCameraAndBarPosition(){const t=this.cameraPosition,e=this.cameraQuaternion;this.el.sceneEl.camera.getWorldPosition(t),this.el.sceneEl.camera.getWorldQuaternion(e);const i=this.rackInverseTransform;t.applyMatrix4(i),this.tempQuaternion.setFromRotationMatrix(i),e.multiply(this.tempQuaternion),this.barPosition.addVectors(this.cameraPosition,this.barOffset)},update(){},tick(){this.getCameraAndBarPosition()}})},297:()=>{AFRAME.registerComponent("in-rack-ui",{schema:{repsToGo:{default:5},message:{default:""}},init(){this.circle=document.createElement("a-circle"),this.circle.setAttribute("radius",.5),this.el.appendChild(this.circle),this.text=document.createElement("a-entity"),this.text.setAttribute("text",{color:"black",wrapCount:15,align:"center"}),this.circle.appendChild(this.text)},update(){this.text.setAttribute("text",`value: ${this.data.message}\n${this.data.repsToGo} reps to go`)}})},532:()=>{AFRAME.registerComponent("nod-shake",{schema:{nodSensitivity:{default:.5},shakeSensitivity:{default:.5},debug:{default:!1}},init(){this.cameraQuaternion=new THREE.Quaternion,this.lastQuaternion=new THREE.Quaternion,this.deltaQuaternion=new THREE.Quaternion,this.camera=this.el.sceneEl.camera,this.firstFrame=!0,this.cumRotNod=0,this.cumRotShake=0,this.debugDisplayCounter=0},update(){this.data.debug?(this.display=document.createElement("a-text"),this.display.object3D.position.set(0,0,-3),this.display.setAttribute("align","center"),this.display.setAttribute("value","Nod/shake debug"),this.camera.el.appendChild(this.display)):this.display&&(this.display.parentNode.removeChild(this.display),this.display=null)},primeDebugReset(){this.debugDisplayCounter++,setTimeout((()=>{this.debugDisplayCounter--,this.debugDisplayCounter<=0&&this.display.setAttribute("text","value: Nod/shake debug")}),1e3)},tick(){if(this.firstFrame)return void(this.firstFrame=!1);const t=this.cameraQuaternion,e=this.deltaQuaternion;if(this.el.sceneEl.camera.getWorldQuaternion(t),e.copy(this.lastQuaternion),e.invert(),e.premultiply(t),e.normalize(),Math.sqrt(1-e.w*e.w)<1e-4);else{const t=2*Math.acos(e.w),i=Math.abs(t);console.log("Absolute angle of rotation: ",i);let s=e.x,a=e.y,h=e.z;Math.abs(s)>=Math.abs(a)&&Math.abs(s)>=Math.abs(h)?(this.cumRotNod+=i,this.cumRotShake=0,this.data.debug&&console.log("X-axis dominant.  Accumulated nod rotation:",this.cumRotNod)):Math.abs(a)>=Math.abs(s)&&Math.abs(a)>=Math.abs(h)?(this.cumRotNod=0,this.cumRotShake+=i,this.data.debug&&console.log("Y-axis dominant.  Accumulated shake rotation:",this.cumRotShake)):(this.cumRotNod+=i,this.cumRotShake=0,this.data.debug&&console.log("Z-axis dominant.  Accumulated nod rotation:",this.cumRotNod))}this.cumRotNod>this.data.nodSensitivity&&(this.el.emit("nod"),this.cumRotNod=0,this.data.debug&&(console.log("Emitted nod event"),this.display.setAttribute("text","value: Detected nod"),this.primeDebugReset())),this.cumRotShake>this.data.shakeSensitivity&&(this.el.emit("shake"),this.cumRotShake=0,this.data.debug&&(console.log("Emitted shake event"),this.display.setAttribute("text","value: Detected shake"),this.primeDebugReset())),this.lastQuaternion.copy(t)}})},211:()=>{AFRAME.registerGeometry("squatRack",{schema:{schema:{width:{default:1},depth:{default:1},frontHeight:{default:2.2},rearHeight:{default:1.8},frameWidth:{default:.08},hookRadiusSmall:{default:.02},hookRadiusLarge:{default:.04},hookDepth:{default:.08},hookHeight:{default:1.5},safetyHeight:{default:.75},safetyRadius:{default:.02}}},init(t){const e=[];let i;i=new THREE.BoxGeometry(t.frameWidth,t.rearHeight,t.frameWidth),i.translate(-t.width/2,t.rearHeight/2,t.depth/2),e.push(i),i=new THREE.BoxGeometry(t.frameWidth,t.rearHeight,t.frameWidth),i.translate(t.width/2,t.rearHeight/2,t.depth/2),e.push(i),i=new THREE.BoxGeometry(t.frameWidth,t.frontHeight,t.frameWidth),i.translate(-t.width/2,t.frontHeight/2,-t.depth/2),e.push(i),i=new THREE.BoxGeometry(t.frameWidth,t.frontHeight,t.frameWidth),i.translate(t.width/2,t.frontHeight/2,-t.depth/2),e.push(i),i=new THREE.CylinderGeometry(t.hookRadiusSmall,t.hookRadiusSmall,t.hookDepth),i.rotateX(Math.PI/2),i.translate(-t.width/2,t.hookHeight,-t.depth/2+t.hookDepth/2),e.push(i),i=new THREE.CylinderGeometry(t.hookRadiusLarge,t.hookRadiusLarge,.01),i.rotateX(Math.PI/2),i.translate(-t.width/2,t.hookHeight,-t.depth/2+t.hookDepth),e.push(i),i=new THREE.CylinderGeometry(t.hookRadiusSmall,t.hookRadiusSmall,t.hookDepth),i.rotateX(Math.PI/2),i.translate(t.width/2,t.hookHeight,-t.depth/2+t.hookDepth/2),e.push(i),i=new THREE.CylinderGeometry(t.hookRadiusLarge,t.hookRadiusLarge,.01),i.rotateX(Math.PI/2),i.translate(t.width/2,t.hookHeight,-t.depth/2+t.hookDepth),e.push(i),i=new THREE.CylinderGeometry(t.safetyRadius,t.safetyRadius,t.depth),i.rotateX(Math.PI/2),i.translate(-t.width/2,t.safetyHeight,0),e.push(i),i=new THREE.CylinderGeometry(t.safetyRadius,t.safetyRadius,t.depth),i.rotateX(Math.PI/2),i.translate(t.width/2,t.safetyHeight,0),e.push(i),this.geometry=THREE.BufferGeometryUtils.mergeBufferGeometries(e)}}),AFRAME.registerComponent("squat-rack",{schema:{width:{default:1},depth:{default:1},frontHeight:{default:2.2},rearHeight:{default:1.8},frameWidth:{default:.08},hookRadiusSmall:{default:.02},hookRadiusLarge:{default:.04},hookDepth:{default:.08},hookHeight:{default:1.5},safetyHeight:{default:.75},safetyRadius:{default:.02}},init(){this.el.setAttribute("geometry",{primitive:"squatRack",width:this.data.width,depth:this.data.depth,frontHeight:this.data.frontHeight,rearHeight:this.data.rearHeight,frameWidth:this.data.frameWidth,hookRadiusSmall:this.data.hookRadiusSmall,hookRadiusLarge:this.data.hookRadiusLarge,hookDepth:this.data.hookDepth,hookHeight:this.data.hookHeight,safetyHeight:this.data.safetyHeight,safetyRadius:this.data.safetyRadius}),this.el.setAttribute("material",{color:"#333"})}})},611:()=>{AFRAME.registerComponent("ui-updater",{init(){this.enteredRack=this.enteredRack.bind(this),this.exitedRack=this.exitedRack.bind(this),this.reachedHooks=this.reachedHooks.bind(this),this.leftHooks=this.leftHooks.bind(this),this.shoulderedBar=this.shoulderedBar.bind(this),this.returnedBar=this.returnedBar.bind(this),this.hitTop=this.hitTop.bind(this),this.loweredFromTop=this.loweredFromTop.bind(this),this.hitTargetDepth=this.hitTargetDepth.bind(this),this.upwardsFromTargetDepth=this.upwardsFromTargetDepth.bind(this),this.belowSafetyPins=this.belowSafetyPins.bind(this),this.bailedOut=this.bailedOut.bind(this),this.el.addEventListener("entered-rack",this.enteredRack),this.el.addEventListener("exited-rack",this.exitedRack),this.el.addEventListener("reached-hooks",this.reachedHooks),this.el.addEventListener("left-hooks",this.leftHooks),this.el.addEventListener("shouldered-bar",this.shoulderedBar),this.el.addEventListener("returned-bar",this.returnedBar),this.el.addEventListener("hit-top",this.hitTop),this.el.addEventListener("lowered-from-top",this.loweredFromTop),this.el.addEventListener("hit-target-depth",this.hitTargetDepth),this.el.addEventListener("upwards-from-target-depth",this.upwardsFromTargetDepth),this.el.addEventListener("below-safety-pins",this.belowSafetyPins),this.el.addEventListener("bailed-out",this.bailedOut),this.state={repPhase:"none",repsToGo:0},this.insideRackUI=document.querySelector("#inside-rack-ui"),this.outsideRackUI=document.querySelector("#outside-rack-ui")},remove(){this.el.removeEventListener("entered-rack",this.enteredRack),this.el.removeEventListener("exited-rack",this.exitedRack),this.el.removeEventListener("reached-hooks",this.reachedHooks),this.el.removeEventListener("left-hooks",this.leftHooks),this.el.removeEventListener("shouldered-bar",this.shoulderedBar),this.el.removeEventListener("returned-bar",this.returnedBar),this.el.removeEventListener("hit-top",this.hitTop),this.el.removeEventListener("lowered-from-top",this.loweredFromTop),this.el.removeEventListener("hit-target-depth",this.hitTargetDepth),this.el.removeEventListener("upwards-from-target-depth",this.upwardsFromTargetDepth),this.el.removeEventListener("below-safety-pins",this.belowSafetyPins),this.el.removeEventListener("bailed-out",this.bailedOut)},setTargetReps(t){this.state.repsToGo=t,this.insideRackUI.setAttribute("in-rack-ui",{repsToGo:this.state.repsToGo})},repCompleted(){this.state.repsToGo--,this.insideRackUI.setAttribute("in-rack-ui",{repsToGo:this.state.repsToGo})},enteredRack(){this.insideRackUI&&this.insideRackUI.setAttribute("visible",!0),this.outsideRackUI&&this.outsideRackUI.setAttribute("visible",!1),this.setTargetReps(5)},exitedRack(){this.insideRackUI&&this.insideRackUI.setAttribute("visible",!1),this.outsideRackUI&&this.outsideRackUI.setAttribute("visible",!0)},reachedHooks(){this.setMessage("Take weight of bar")},leftHooks(){},shoulderedBar(){this.setMessage("Step Back")},returnedBar(){this.setMessage("Finished!")},setMessage(t){this.insideRackUI.setAttribute("in-rack-ui",{message:t})},hitTop(){switch(this.state.repPhase){case"none":this.state.repPhase="ready",this.setMessage("Ready!");break;case"down":this.state.repPhase="rest",this.setMessage("Incomplete Rep");break;case"up":this.state.repPhase="rest",this.setMessage("Rep Complete"),this.repCompleted();break;default:console.error("Hit Top in unexpected state: ",this.state.repPhase)}},loweredFromTop(){switch(this.state.repPhase){case"none":this.setMessage("Stand Taller before beginning reps");break;case"ready":case"rest":this.state.repPhase="down",this.setMessage("Going down...");break;case"up":this.setMessage("Stand at full height to complete last Rep!");break;default:console.error("Lowered From Top in unexpected state: ",this.state.repPhase)}},hitTargetDepth(){switch(this.state.repPhase){case"none":this.setMessage("Stand at full height before beginning reps");break;case"down":this.setMessage("Hit Depth!"),this.state.repPhase="up";break;case"up":this.setMessage("Push up to complete this rep!");break;default:console.error("Lowered From Top in unexpected state: ",this.state.repPhase)}},upwardsFromTargetDepth(){"up"===this.state.repPhase||console.error("Lowered From Top in unexpected state: ",this.state.repPhase)},belowSafetyPins(){this.setMessage("Failed set.  Step out of rack and remove weight plates from bar.")},bailedOut(){this.setMessage("Failed set.  Step out of rack and remove weight plates from bar.")}})},117:()=>{AFRAME.registerComponent("vertical-controls",{init(){this.verticalVelocity=0,this.verticalAcceleration=0,this.keyDown=this.keyDown.bind(this),this.keyUp=this.keyUp.bind(this),window.addEventListener("keydown",this.keyDown),window.addEventListener("keyup",this.keyUp)},keyDown(t){"o"===t.key&&(this.verticalAcceleration+=2),"k"===t.key&&(this.verticalAcceleration=-2)},keyUp(t){"o"!==t.key&&"k"!==t.key||(this.verticalVelocity=0,this.verticalAcceleration=0)},tick(t,e){velDelta=e*this.verticalAcceleration/1e3,this.verticalVelocity+=velDelta,this.verticalVelocity>1&&(this.verticalVelocity=1),this.verticalVelocity<-1&&(this.verticalVelocity=-1),yDelta=e*this.verticalVelocity/1e3,this.el.object3D.position.y+=yDelta}})}},e={};function i(s){var a=e[s];if(void 0!==a)return a.exports;var h=e[s]={exports:{}};return t[s](h,h.exports,i),h.exports}return i(610),i(693),i(297),i(611),i(211),i(117),i(532),{}})()));
//# sourceMappingURL=squatmaster.min.js.map